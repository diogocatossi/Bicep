name: "Sytac AZL Deploy via Bicep"

trigger: none

resources:
  repositories:
    - repository: Sources
      type: git
      name: Azure/Sources

variables:
  - group: VG-Sytac-ALZ
  
stages:
- stage: PLAN
  jobs:
  - job: ALZ_Bicep_WhatIF
    displayName: 'PLAN - Infrastructure validation'
    pool: 
      vmImage: ubuntu-latest
    steps:
    - task: AzurePowerShell@5
      displayName: What-if Plan 
      name: alz_plan_whatif
      inputs:
        azureSubscription: $(ServiceConnection)
        ScriptType: inlineScript
        inline: |
          New-AzSubscriptionDeployment -Location $(Location) -TemplateFile .\Templates\alz-base.bicep  -WhatIf `
          -parAutomationAccount $(AutomationAccountName) `
          -parDefenderSecurityContact $(DefenderSecurityContact) `
          -parKeyVaultAccessObjectID $(KeyVaultAccessObjectID) `
          -parResourceGroupName $(ResourceGroupName) `
          -Verbose
        azurePowerShellVersion: 'LatestVersion'

  - job: ReviewValidation
    displayName: 'VALIDATION - Review plan modifications'
    timeoutInMinutes: 720 # task times out in 12 hours and is rejected
    pool: server
    steps:
    - task: ManualValidation@0
      timeoutInMinutes: 720 # task times out in 12 hours and is rejected
      inputs:
        notifyUsers: $(ValidationNotifyUserOrGroup)
        instructions: 'Validate deployment plan for significant modifications that might impact the environment'

- stage: DEPLOY
  dependsOn: PLAN
  jobs:
  - job: ALZ_Bicep_Create
    displayName: 'DEPLOY - Perform Bicep deployment'
    pool: 
      vmImage: ubuntu-latest
    steps:
    - task: AzurePowerShell@5
      displayName: AzurePowerShell Deploy Bicep Orchestration
      name: alz_create_rsg
      inputs:
        azureSubscription: $(ServiceConnection)
        ScriptType: inlineScript
        inline: |
          if ($null -ne (Get-AzKeyVault -name "keyvault-$(ResourceGroupName)" -Location $(Location) -InRemovedState)) {
            New-AzResourceGroup -Name $(ResourceGroupName) -Location $(Location)
            Get-AzKeyVault -name 'keyvault-$(ResourceGroupName)' -Location  $(Location) -InRemovedState | Undo-AzKeyVaultRemoval
          } 
          New-AzSubscriptionDeployment -Location $(Location) -TemplateFile .\Templates\alz-base.bicep `
          -parAutomationAccount $(AutomationAccountName) `
          -parDefenderSecurityContact $(DefenderSecurityContact) `
          -parKeyVaultAccessObjectID $(KeyVaultAccessObjectID) `
          -parResourceGroupName $(ResourceGroupName) `
          -Verbose
        azurePowerShellVersion: 'LatestVersion'

- stage: CLEANUP
  dependsOn: DEPLOY
  jobs:
  - job: ReviewCleanup
    displayName: CLEANUP - Review cleanup before object removal
    timeoutInMinutes: 2880 # task times out in 2 days and proceed with cleanup
    pool: server
    steps:
    - task: ManualValidation@0
      timeoutInMinutes: 2880 # task times out in 2 days and proceed with cleanup
      inputs:
        notifyUsers: $(ValidationNotifyUserOrGroup)
        instructions: 'Validate deployment plan for significant modifications that might impact the environment'
        onTimeout: 'resume'